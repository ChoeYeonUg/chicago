<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sist.dao.mapper.MemberMapper">
    <!-- 구문을 찾기위해 사용 될 수 있는 명명공간 내 유일한 구분자 -->
  	<sql id="where-id">
        WHERE id=#{id}          
    </sql>
    
    <sql id="where-pwd">
        WHERE pwd=#{pwd}          
    </sql>
    
    <!-- Check id, pwd for  Withdraw Member -->
	<sql id="where-id,pwd">
		WHERE member.id=#{id},addr.id=#{id} AND member.pwd=#{pwd}          
	</sql>
	
	<!-- Check address1, member TABLE id for Select, Modify Address -->
	<sql id="where-addrid">
		WHERE id = (SELECT id FROM member WHERE id=#{id})
	</sql>
     
     <select id="findPwd" resultType="int" parameterType="member">
     	SELECT count(*) FROM member WHERE id=#{id} AND name=#{name} AND phone=#{phone}
     </select>
     
  	<select id="idCheck" resultType="int" parameterType="String">
  		SELECT count(*) FROM member <include refid="where-id"/>
  	</select>
  	
  	<select id="pwdCheck" resultType="String" parameterType="String">
  		SELECT pwd FROM member <include refid="where-id"></include>
  	</select>
  	
  	<select id="getGrade" resultType="int" parameterType="String">
  		SELECT grade FROM member <include refid="where-id"></include>
  	</select>
  	
  	<select id="selectMember" resultType="member" parameterType="String">
  		SELECT name,id,pwd,addr,zipcode,phone,gender,email,point,grade FROM member <include refid="where-id"/>
  	</select>
  	
  	<select id="orderData" resultType="member" parameterType="String">
  		SELECT name,addr,zipcode,phone,point FROM member <include refid="where-id"/>
  	</select>
  	
  	<select id="memberlist" resultType="member" parameterType="hashmap">
	  SELECT id,name,phone,grade,num
			FROM (SELECT id,name,phone,grade,ROWNUM as num
			FROM (SELECT id,name,phone,grade FROM member WHERE  <![CDATA[ id <> 'admin' ]]>)) WHERE num BETWEEN #{start} AND #{end}
  	</select>
  	
  	<select id="memberTotalPage" resultType="int" parameterType="int">
  		SELECT CEIL(COUNT(*)/#{rowSize}) FROM member WHERE  <![CDATA[ id <> 'admin' ]]>
  	</select>
  	
  	<select id="memberSearch" resultType="member" parameterType="hashmap">
	  SELECT id,name,phone,grade,num
			FROM (SELECT id,name,phone,grade,ROWNUM as num
			FROM (SELECT id,name,phone,grade FROM member WHERE  <![CDATA[ id <> 'admin' ]]> AND ${fs} LIKE '%${ss}%')) WHERE num BETWEEN #{start} AND #{end}
  	</select>
  	
  	<select id="memberSearchPage" resultType="int" parameterType="hashmap">
  		SELECT CEIL(COUNT(*)/#{rowSize}) FROM member WHERE  <![CDATA[ id <> 'admin' ]]> AND ${fs} LIKE '%${ss}%'
  	</select>
  	
  	<insert id="joinMember" parameterType="member">
  		INSERT INTO member(id,pwd,name,addr,zipcode,phone,gender,email)
  			VALUES(#{id},#{pwd},#{name},#{addr}, #{zipcode}, #{phone}, #{gender}, #{email})
  	</insert>
  	
  	<delete id="memberDelete" parameterType="String">
  		DELETE FROM member <include refid="where-id"/>
  	</delete>
  	
  	<update id="updateGrade" parameterType="hashmap">
  		UPDATE member SET grade=#{grade} <include refid="where-id"/>
  	</update>
  	
	<!-- Made By Choding -->
	<!-- memberInfo Database Query -->
	
	<!-- Modify Member Info -->
	<update id="modyfyMemberInfo" parameterType="member">
		UPDATE member SET name=#{name},gender=#{gender},addr=#{addr},zipcode=#{zipcode},email=#{email},phone=#{phone} <include refid="where-id"/>
	</update>
	
	<!-- Check id, pwd for Modify Password -->
	<select id="selectMemberPwd" resultType="member" parameterType="String">
  		SELECT id,pwd FROM member <include refid="where-id"/>
	</select>
  
	<!-- Modify Member Password -->
	<update id="modyfyMemberPwd" parameterType="hashmap">
		UPDATE member SET pwd=#{pwd} <include refid="where-id"/>
	</update>
	
	<!-- Check id for Confirm Member Delivery Address -->
	<select id="selectMemberDeliveryAddrs" resultType="address" parameterType="String">
		SELECT addr1,zipcode1,addr2,zipcode2,addr3,zipcode3 FROM addrs <include refid="where-addrid"/>
 	</select>
 	
 	<!-- Insert Member Address -->
 	<insert id="insertMemberDeliveryAddrs" parameterType="address">
 		INSERT INTO addrs(id,addr1,zipcode1,addr2,zipcode2,addr3,zipcode3) VALUES(#{id},#{addr1},#{zipcode1},#{addr2},#{zipcode2},#{addr3},#{zipcode3})
 	</insert>
 	
	<!-- Modify Member Address -->
	<update id="modyfyMemberDeliveryAddrs" parameterType="hashmap">
		UPDATE addrs SET addr1=#{addr1},zipcode1=#{zipcode1},addr2=#{addr2},zipcode2=#{zipcode2},addr3=#{addr3},zipcode3=#{zipcode3} <include refid="where-id"/>
	</update>
	
	<!-- Withdraw Member -->
	<delete id="withdrawMember" parameterType="hashmap">
		DELETE FROM member <include refid="where-id,pwd"/>
  	</delete>
  	
  	<update id="pointMinus" parameterType="hashmap">
  		UPDATE member SET point = point - #{usePoint} WHERE id=#{id}
  	</update>
  	
  	<!-- 내가 쓴 문의내역과 연관댓글 확인하기 -->
  	<select id="myQuestion" resultType="board" parameterType="hashmap">
  		SELECT board_no,subject,id,GROUP_ID,hit,group_tab,regdate,secret,pwd,to_char(regdate,'yyyy-MM-dd') as dbday,num
 		FROM (SELECT board_no,id,GROUP_ID,hit,group_tab,subject,regdate,secret,pwd,ROWNUM as num
 		FROM (SELECT board_no,id,GROUP_ID,hit,group_tab,subject,regdate,secret,pwd FROM board WHERE category=3 AND group_id in (select DISTINCT GROUP_ID from board where id=#{id} AND group_tab=0) ORDER BY group_id DESC, group_step ASC))
 		WHERE num BETWEEN #{start} AND #{end}
  	</select>
  	
  	<!-- 내가 쓴 문의내역 토탈페이지 수 -->
    <select id="myQuestionTotal" resultType="int" parameterType="hashmap">
    	SELECT CEIL(COUNT(*)/#{rowSize}) FROM (select GROUP_ID from board where group_id 
    	in (select DISTINCT GROUP_ID from board where CATEGORY=3 AND id=#{id} AND group_tab=0))    
    </select>
    
  	<select id="myQ_content" resultType="board" parameterType="int">
	  	SELECT board_no,subject,id,category,content,regdate,hit,secret,pwd  
	  	FROM board WHERE category=3 AND board_no=#{board_no}
  	</select>
  	
  	<delete id="myQ_delete" parameterType="int">
  		DELETE FROM board WHERE board_no=#{board_no}
  	</delete>
  	
  	<select id="myQ_deleteData" resultType="board" parameterType="int">
  		SELECT root,depth FROM board WHERE board_no=#{board_no}
  	</select>
  	
  	 <update id="myQ_admin_delete" parameterType="int">
  		UPDATE board SET subject='관리자가 삭제한 게시물입니다.', content='관리자가 삭제한 게시물입니다.'WHERE board_no=#{board_no}
 	</update>
 	
 	<update id="myQ_update" parameterType="board">
  		UPDATE board SET subject=#{subject},content=#{content},
  		secret=#{secret},pwd=#{pwd},hit=#{hit} WHERE board_no=#{board_no}
  	</update>	
 	
</mapper>