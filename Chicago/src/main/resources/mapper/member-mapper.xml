<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sist.dao.mapper.MemberMapper">
    <!-- 구문을 찾기위해 사용 될 수 있는 명명공간 내 유일한 구분자 -->
  	<sql id="where-id">
        WHERE id=#{id}          
    </sql>
    
    <sql id="where-pwd">
        WHERE pwd=#{pwd}          
    </sql>
    
    <!-- Check id, pwd for  Withdraw Member -->
	<sql id="where-id,pwd">
		WHERE member1.id=#{id},addr1.id=#{id} AND member1.pwd=#{pwd}          
	</sql>
	
	<!-- Check address1, member TABLE id for Select, Modify Address -->
	<sql id="where-addrid">
		WHERE id = (SELECT id FROM member1 WHERE id=#{id})
	</sql>
      
  	<select id="idCheck" resultType="int" parameterType="String">
  		SELECT count(*) FROM member1 <include refid="where-id"/>
  	</select>
  	
  	<select id="pwdCheck" resultType="String" parameterType="String">
  		SELECT pwd FROM member1 <include refid="where-id"></include>
  	</select>
  	
  	<select id="getGrade" resultType="int" parameterType="String">
  		SELECT grade FROM member1 <include refid="where-id"></include>
  	</select>
  	
  	<select id="selectMember" resultType="member" parameterType="String">
  		SELECT name,id,pwd,addr,zipcode,phone,gender,email,point,grade FROM member1 <include refid="where-id"/>
  	</select>
  	
  	<select id="orderData" resultType="member" parameterType="String">
  		SELECT name,addr,zipcode,phone,point FROM member1 <include refid="where-id"/>
  	</select>
  	
  	<select id="memberlist" resultType="member" parameterType="hashmap">
	  SELECT id,name,phone,grade,num
			FROM (SELECT id,name,phone,grade,ROWNUM as num
			FROM (SELECT id,name,phone,grade FROM member1 WHERE  <![CDATA[ id <> 'admin' ]]>)) WHERE num BETWEEN #{start} AND #{end}
  	</select>
  	
  	<select id="memberTotalPage" resultType="int" parameterType="int">
  		SELECT CEIL(COUNT(*)/#{rowSize}) FROM member1 WHERE  <![CDATA[ id <> 'admin' ]]>
  	</select>
  	
  	<select id="memberSearch" resultType="member" parameterType="hashmap">
	  SELECT id,name,phone,grade,num
			FROM (SELECT id,name,phone,grade,ROWNUM as num
			FROM (SELECT id,name,phone,grade FROM member1 WHERE  <![CDATA[ id <> 'admin' ]]> AND ${fs} LIKE '%${ss}%')) WHERE num BETWEEN #{start} AND #{end}
  	</select>
  	
  	<select id="memberSearchPage" resultType="int" parameterType="hashmap">
  		SELECT CEIL(COUNT(*)/#{rowSize}) FROM member1 WHERE  <![CDATA[ id <> 'admin' ]]> AND ${fs} LIKE '%${ss}%'
  	</select>
  	
  	<insert id="joinMember" parameterType="member">
  		INSERT INTO member1(id,pwd,name,addr,zipcode,phone,gender,email)
  			VALUES(#{id},#{pwd},#{name},#{addr}, #{zipcode}, #{phone}, #{gender}, #{email})
  	</insert>
  	
  	<delete id="memberDelete" parameterType="String">
  		DELETE FROM member1 <include refid="where-id"/>
  	</delete>
  	
  	<update id="updateGrade" parameterType="hashmap">
  		UPDATE member1 SET grade=#{grade} <include refid="where-id"/>
  	</update>
  	
	<!-- Made By Choding -->
	<!-- memberInfo Database Query -->
	
	<!-- Modify Member Info -->
	<update id="modyfyMemberInfo" parameterType="com.sist.dao.MemberVO">
		UPDATE member1 SET addr=#{addr},zipcode=#{zipcode},email=#{email},phone=#{phone} <include refid="where-id"/>
	</update>
	
	<!-- Check id, pwd for Modify Password -->
	<select id="selectMemberPwd" resultType="member" parameterType="String">
		SELECT id,pwd FROM member1 <include refid="where-id"/>
	</select>
	
	<!-- Modify Member Password -->
	<update id="modyfyMemberPwd" parameterType="hashmap">
		UPDATE member1 SET pwd=#{pwd} <include refid="where-id"/>
	</update>
	
	<!-- Check id for Confirm Member Delivery Address -->
	<select id="selectMemberDeliveryAddrs" resultType="address" parameterType="String">
		SELECT addr1,zipcode1,addr2,zipcode2,addr3,zipcode3 FROM addrs1 <include refid="where-addrid"/>
 	</select>
 	
 	<!-- Insert Address -->
 	<insert id="insertMemberDeliveryAddrs" parameterType="address">
		INSERT INTO address1(addr1,zipcode1,addr2,zipcode2,addr3,zipcode3)
		VALUES(#{addr1},#{zipcode1},#{addr2},#{zipcode2},#{addr3},#{zipcode3}) <include refid="where-id"/>
	</insert>
	
	<!-- Modify Member Address -->
	<update id="modyfyMemberDeliveryAddrs" parameterType="hashmap">
		UPDATE addrs1 SET addr1=#{addr1},zipcode1=#{zipcode1},addr2=#{addr2},zipcode2=#{zipcode2},addr3=#{addr3},zipcode3=#{zipcode3} <include refid="where-id"/>
	</update>
	
	<!-- Withdraw Member -->
	<delete id="withdrawMember" parameterType="hashmap">
		DELETE FROM member1,addr1 <include refid="where-id,pwd"/>
	</delete>
	
</mapper>