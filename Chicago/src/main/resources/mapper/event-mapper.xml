<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sist.dao.mapper.EventMapper">
	<select id="schedule" resultType="event" parameterType="hashmap">
		<!-- SELECT EVENT_NAME,STORE_NAME,START_DAY,END_DAY,DESCRIPTION FROM EVENT WHERE START_DAY IS NOT NULL -->
		SELECT EVENT_NO,EVENT_NAME,STORE_NAME,START_DAY,END_DAY,DESCRIPTION,num 
 		FROM (SELECT EVENT_NO,EVENT_NAME,STORE_NAME,START_DAY,END_DAY,DESCRIPTION,ROWNUM as num 
 		FROM (SELECT EVENT_NO,EVENT_NAME,STORE_NAME,START_DAY,END_DAY,DESCRIPTION FROM EVENT ORDER BY START_DAY)) 
 		WHERE num BETWEEN #{start} AND #{end}
 		<!-- <![CDATA[    
 		SELECT EVENT_NO,EVENT_NAME,STORE_NAME,START_DAY,END_DAY,DESCRIPTION,num
 		FROM (SELECT EVENT_NO,EVENT_NAME,STORE_NAME,START_DAY,END_DAY,DESCRIPTION,ROWNUM as num
 		FROM (SELECT EVENT_NO,EVENT_NAME,STORE_NAME,START_DAY,END_DAY,DESCRIPTION FROM EVENT WHERE START_DAY >= TO_DATE('${today }','YYYY') AND START_DAY < TO_DATE('${sd }-01' ,'YYYY-MM') ORDER BY START_DAY ))
 		WHERE num BETWEEN #{start} AND #{end}
 		 ]]>  -->
	</select>
	<select id="scheduleTotalPage" resultType="int" parameterType="int">
		SELECT CEIL(COUNT(*)/10) FROM EVENT
	</select>
	<select id="dateCompare" resultType="EventVO" parameterType="String">
		<!-- <![CDATA[
			SELECT EVENT_NAME,START_DAY,END_DAY FROM EVENT WHERE TRANSLATE(START_DAY, '0123456789' || START_DAY, '0123456789')<=TO_DATE('${dataUse}' ,'YYYYmmdd') AND TRANSLATE(END_DAY, '0123456789' || END_DAY, '0123456789')>=TO_DATE('${dataUse}' ,'YYYYmmdd') 
		]]> -->
	</select>
	<select id="compareDate" parameterType="hashmap" resultType="event">
		<![CDATA[
		SELECT EVENT_NAME,START_DAY,END_DAY,TO_DATE(TO_CHAR(START_DAY,'yyyyMMdd'), 'yyyyMMdd') as STDAY, TO_DATE(TO_CHAR(END_DAY,'yyyyMMdd'),'yyyyMMdd') as EDDAY FROM EVENT WHERE START_DAY>=TO_DATE('${year}${months}01','yyyyMMdd') AND START_DAY<=TO_DATE('${year}${months}${index}','yyyyMMdd')
		]]>
	</select>	
	<select id="dayToday" parameterType="hashmap" resultType="event">
		SELECT EVENT_NO,EVENT_NAME,STORE_NAME,START_DAY,END_DAY,DESCRIPTION,num 
 		FROM (SELECT EVENT_NO,EVENT_NAME,STORE_NAME,START_DAY,END_DAY,DESCRIPTION,ROWNUM as num 
 		FROM (SELECT EVENT_NO,EVENT_NAME,STORE_NAME,START_DAY,END_DAY,DESCRIPTION FROM EVENT WHERE TO_DATE(TO_CHAR(START_DAY,'yyyyMMdd'), 'yyyyMMdd')=TO_DATE('${dateUse2}', 'yyyyMMdd') ORDER BY START_DAY)) 
 		WHERE num BETWEEN #{start} AND #{end} 
	</select>
	<select id="dayPage" parameterType="hashmap" resultType="int">
		SELECT CEIL(COUNT(*)/10) FROM EVENT WHERE TO_DATE(TO_CHAR(START_DAY,'yyyyMMdd'), 'yyyyMMdd')=TO_DATE('${dateUse2}', 'yyyyMMdd') ORDER BY START_DAY
	</select>
	<!-- 관리자 메뉴 -->
  		
  		<insert id="eventInsert" parameterType="event">
  			INSERT INTO event VALUES((SELECT NVL(MAX(event_no)+1,1) FROM event), #{store_name}, #{start_day},#{end_day}, #{event_name}, #{description})
  		</insert>
  		
  		<update id="updateEventData" parameterType="event">
  			UPDATE event SET event_name=#{event_name}, store_name=#{store_name},start_day=#{start_day},end_day=#{end_day}, description=#{description}
  				WHERE event_no =#{event_no}
  		</update>
  		
  		<delete id="eventDelete" parameterType="int">
  			DELETE FROM event WHERE event_no = #{event_no}
  		</delete>
  		
  		<select id="updateEvent" parameterType="int" resultType="event">
  			SELECT event_no,event_name,store_name,start_day,end_day,description FROM event WHERE event_no = #{event_no}
  		</select>
  		
  		<select id="printSysopEvent" parameterType="hashmap" resultType="event">
 			SELECT event_no,event_name,store_name,start_day,num
			FROM (SELECT event_no,event_name,store_name,start_day,ROWNUM as num
			FROM (SELECT event_no,event_name,store_name,start_day FROM event ORDER BY event_no DESC)) WHERE num BETWEEN #{start} AND #{end}
	 	</select>
	 	
	 	<select id="eventTotalPage" resultType="int" parameterType="int">
	  		SELECT CEIL(COUNT(*)/#{rowSize}) FROM event
	  	</select>
	  	
	  	<select id="printSysopSearchEvent" parameterType="hashmap" resultType="event">
	 		SELECT event_no,event_name,store_name,start_day,num
			FROM (SELECT event_no,event_name,store_name,start_day,ROWNUM as num
			FROM (SELECT event_no,event_name,store_name,start_day FROM event WHERE ${fs} LIKE '%${ss}%' ORDER BY event_no DESC)) WHERE num BETWEEN #{start} AND #{end}
	 	</select>
	 	
	 	<select id="eventSearchTotalPage" resultType="int" parameterType="hashmap">
	  		SELECT CEIL(COUNT(*)/#{rowSize}) FROM event WHERE ${fs} LIKE '%${ss}%'
	  	</select>
</mapper>